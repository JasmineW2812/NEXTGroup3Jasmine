@page "/roles/delete"
@using Microsoft.EntityFrameworkCore
@using NEXTGroup3.Models
@inject IDbContextFactory<NEXTGroup3.Data.NEXTGroup3Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Roles</h2>
    <hr />
    @if (roles is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <EditForm method="post" Model="roles" OnValidSubmit="DeleteRoles" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(roles is null)">Delete</button> |
            <a href="/roles">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Roles? roles;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        roles = await context.Roles.FirstOrDefaultAsync(m => m.Id == Id);

        if (roles is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteRoles()
    {
        using var context = DbFactory.CreateDbContext();
        context.Roles.Remove(roles!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/roles");
    }
}
